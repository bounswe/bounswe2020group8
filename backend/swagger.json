{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Boun Group 8",
    "description": "Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/customer/signup": {
      "post": {
        "tags": ["customer"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lastName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "passwordConfirm",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password or type"
          }
        }
      }
    },
    "/customer/login": {
      "post": {
        "tags": ["customer"],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponseWtoken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password or type"
          }
        }
      }
    },
    "/customer/verifyEmail": {
      "get": {
        "tags": ["customer"],
        "parameters": [
          {
            "in": "query",
            "name": "verifyEmailToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Insufficient token"
          }
        }
      }
    },
    "/customer/changePassword": {
      "post": {
        "tags": ["customer"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "oldPassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPasswordRepeat",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid password"
          }
        }
      }
    },
    "/customer/signupWithGoogle": {
      "post": {
        "tags": ["customer"],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "googleID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponseWtoken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email, type or googleID"
          }
        }
      }
    },
    "/customer/loginWithGoogle": {
      "post": {
        "tags": ["customer"],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "googleID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponseWtoken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email, type or googleID"
          }
        }
      }
    },
    "/customer/forgotPassword": {
      "post": {
        "tags": ["customer"],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "Email Address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid e-mail or type."
          }
        }
      }
    },
    "/customer/resetPassword": {
      "post": {
        "tags": ["customer"],
        "parameters": [
          {
            "in": "query",
            "name": "resetPasswordToken",
            "description": "Reset Password Token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPasswordCheck",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid resetPasswordToken or newPassword or newPasswordCheck"
          }
        }
      }
    },
    "/customer/me": {
      "patch": {
        "tags": ["customer"],
        "security": {
          "bearerAuth": []
        },
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "Changed data object",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bearer token"
          }
        }
      },
      "get": {
        "tags": ["customer"],
        "parameters": [],
        "security": {
          "bearerAuth": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bearer token"
          }
        }
      },
      "delete": {
        "tags": ["customer"],
        "security": {
          "bearerAuth": []
        },
        "parameters": [
          {
            "in": "query",
            "name": "isActive",
            "description": "Suspension status",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bearer token"
          }
        }
      }
    },
    "/customer": {
      "get": {
        "tags": ["customer"],
        "description": "Returns all the customers. You can filter, sort ,limit number of results, paginate and limit the returned fields. For filter, you need to use the fields's name and value. You can filter using some operators. They are gte, gt ,lte, lt, regex. An example for filtering could be: ?email=test@test.com&name[regex]=can",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "description": "name of the field to sort, An example would be: sort=name,lastName. Default doesn't sort anything",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "number of elements to return, default is 1000",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "page",
            "description": "page number for the results, default is 1",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Fields you want in the returned elements, an example would be: fields=name,lastName,email. Default returns every field",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/CustomerList"
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": ["customer"],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      },
      "patch": {
        "tags": ["customer"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/components/schemas/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      },
      "delete": {
        "tags": ["customer"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/responses/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "null"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      }
    },

    "/vendor/signup": {
      "post": {
        "tags": ["vendor"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lastName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "companyName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "companyDomainName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "passwordConfirm",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password or type"
          }
        }
      }
    },
    "/vendor/login": {
      "post": {
        "tags": ["vendor"],
        "parameters": [
          {
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponseWtoken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password or type"
          }
        }
      }
    },
    "/vendor/verifyEmail": {
      "get": {
        "tags": ["vendor"],
        "parameters": [
          {
            "in": "query",
            "name": "verifyEmailToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Insufficient token"
          }
        }
      }
    },
    "/vendor/changePassword": {
      "post": {
        "tags": ["vendor"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "oldPassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPasswordRepeat",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid token code or passwords don't match"
          }
        }
      }
    },
    "/vendor/forgotPassword": {
      "post": {
        "tags": ["vendor"],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "Email Address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid e-mail or type."
          }
        }
      }
    },
    "/vendor/resetPassword": {
      "post": {
        "tags": ["vendor"],
        "parameters": [
          {
            "in": "query",
            "name": "resetPasswordToken",
            "description": "Reset Password Token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPasswordCheck",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid resetPasswordToken or newPassword or newPasswordCheck"
          }
        }
      }
    },
    "/vendor/me": {
      "patch": {
        "tags": ["vendor"],
        "security": {
          "bearerAuth": []
        },
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "Changed data object",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bearer token"
          }
        }
      },
      "get": {
        "tags": ["vendor"],
        "parameters": [],
        "security": {
          "bearerAuth": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bearer token"
          }
        }
      },
      "delete": {
        "tags": ["vendor"],
        "security": {
          "bearerAuth": []
        },
        "parameters": [
          {
            "in": "query",
            "name": "isActive",
            "description": "Suspension status",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bearer token"
          }
        }
      }
    },
    "/vendor": {
      "get": {
        "tags": ["vendor"],
        "description": "Returns all the vendors. You can filter, sort ,limit number of results, paginate and limit the returned fields. For filter, you need to use the fields's name and value. You can filter using some operators. They are gte, gt ,lte, lt, regex. An example for filtering could be: ?email=test@test.com&name[regex]=can",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "description": "name of the field to sort, An example would be: sort=name,lastName. Default doesn't sort anything",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "number of elements to return, default is 1000",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "page",
            "description": "page number for the results, default is 1",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Fields you want in the returned elements, an example would be: fields=name,lastName,email. Default returns every field",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/VendorList"
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      }
    },
    "/vendor/{id}": {
      "get": {
        "tags": ["vendor"],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/Vendor"
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      },
      "patch": {
        "tags": ["vendor"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/components/schemas/Vendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/Vendor"
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      },
      "delete": {
        "tags": ["vendor"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/responses/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "null"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Authorization error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "string"
      }
    },
    "responses": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "returnMessage": {
            "type": "string"
          },
          "returnCode": {
            "type": "number"
          }
        }
      },
      "ApiResponseWtoken": {
        "type": "object",
        "properties": {
          "tokenCode": {
            "type": "string"
          },
          "returnMessage": {
            "type": "string"
          },
          "returnCode": {
            "type": "number"
          }
        }
      },
      "NullData": {
        "allOf": [
          {
            "$ref": "#/components/responses/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "number"
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        ]
      },
      "CustomerList": {
        "allOf": [
          {
            "$ref": "#/components/responses/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "number"
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        ]
      },
      "Customer": {
        "allOf": [
          {
            "$ref": "#/components/responses/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        ]
      },
      "VendorList": {
        "allOf": [
          {
            "$ref": "#/components/responses/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "number"
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        ]
      },
      "Vendor": {
        "allOf": [
          {
            "$ref": "#/components/responses/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          }
        ]
      }
    },
    "schemas": {
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "mongoID"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "shoppingLists": {
            "type": "object list"
          },
          "orders": {
            "type": "object list"
          },
          "cart": {
            "type": "object"
          },
          "addresses": {
            "type": "object list"
          },
          "telephoneNumber": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "creditCards": {
            "type": "object list"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "mongoID"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "companyDomainName": {
            "type": "string"
          },
          "aboutCompany": {
            "type": "string"
          },
          "IBAN": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "location": {
            "type": "object"
          }
        },
        "xml": {
          "name": "User"
        }
      }
    }
  }
}
